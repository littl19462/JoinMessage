name: Build and Release Plugin

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # 1. 检出代码（使用固定版本）
      - name: Checkout code
        uses: actions/checkout@v4 # 官方维护版本 :cite[3]:cite[8]
        with:
          fetch-depth: 0

      # 2. 设置Java环境（集成Maven管理）
      - name: Set up JDK 17
        uses: actions/setup-java@v4 # 官方最新稳定版 :cite[1]:cite[4]
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven' # 自动缓存依赖 :cite[8]

      # 3. 版本号提取（兼容手动/自动触发）
      - name: Extract version
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            VERSION=${{ github.event.inputs.tag }}
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "RELEASE_VERSION=${VERSION}" >> $GITHUB_ENV

      # 4. Maven版本设置（添加健壮性检查）
      - name: Set Maven version
        run: |
          # 验证POM文件存在
          if [ ! -f pom.xml ]; then
            echo "❌ Error: pom.xml not found in $GITHUB_WORKSPACE"
            exit 1
          fi
          
          mvn -B versions:set -DnewVersion=${{ env.RELEASE_VERSION }}
          # 验证版本更新结果
          grep -q "<version>${{ env.RELEASE_VERSION }}</version>" pom.xml || exit 1

      # 5. 构建插件（启用调试日志）
      - name: Build with Maven
        run: mvn -B clean package -DskipTests -X

      # 6. 发布Release（使用兼容版本）
      - name: Create Release
        uses: softprops/action-gh-release@v2 # 改用v2主版本 :cite[6]
        with:
          files: target/*.jar
          tag_name: v${{ env.RELEASE_VERSION }}
          body: "Release ${{ env.RELEASE_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
